/**
 * {{ENTITY_NAME_PASCAL}} Routes - Collection Endpoints
 *
 * Generated from entity: {{ENTITY_NAME}}
 *
 * Handles collection operations: list and create
 * Uses Repository pattern for database operations
 *
 * @generated {{TIMESTAMP}}
 */
import { createApp } from '@spfn/core/route';
import { get{{ENTITY_NAME_PASCAL}}Repository } from '../../repositories/{{ENTITY_NAME}}.repository.js';
import {
    get{{ENTITY_NAME_PASCAL}}ListContract,
    create{{ENTITY_NAME_PASCAL_SINGULAR}}Contract
} from './contract.js';

const app = createApp();

/**
 * GET /{{ENTITY_NAME}} - List {{ENTITY_NAME}} with pagination
 */
app.bind(get{{ENTITY_NAME_PASCAL}}ListContract, async (c) => {
    const { page = 1, limit = 10 } = c.query;

    const repo = get{{ENTITY_NAME_PASCAL}}Repository();
    const result = await repo.findPage({
        pagination: { page, limit }
    });

    return c.json(result);
});

/**
 * POST /{{ENTITY_NAME}} - Create new {{ENTITY_NAME_SINGULAR}}
 */
app.bind(create{{ENTITY_NAME_PASCAL_SINGULAR}}Contract, async (c) => {
    const body = await c.data();
    const repo = get{{ENTITY_NAME_PASCAL}}Repository();
    const new{{ENTITY_NAME_PASCAL_SINGULAR}} = await repo.save(body);
    return c.json(new{{ENTITY_NAME_PASCAL_SINGULAR}}, 201);
});

export default app;