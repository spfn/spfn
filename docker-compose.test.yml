version: '3.8'

services:
  # PostgreSQL for testing
  postgres:
    image: postgres:16-alpine
    container_name: spfn-test-postgres
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: spfn_test
    ports:
      - '5433:5432'
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U testuser -d spfn_test']
      interval: 5s
      timeout: 5s
      retries: 5

  # Single Redis instance (for basic tests)
  redis-single:
    image: redis:7-alpine
    container_name: spfn-redis-single
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 3s
      retries: 5

  # Master instance (for master-replica tests)
  redis-master:
    image: redis:7-alpine
    container_name: spfn-redis-master
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 3s
      retries: 5

  # Replica instance (for master-replica tests)
  redis-replica:
    image: redis:7-alpine
    container_name: spfn-redis-replica
    ports:
      - "6381:6379"
    command: redis-server --replicaof redis-master 6379 --appendonly yes
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 3s
      retries: 5

  # Redis with authentication (for auth tests)
  redis-auth:
    image: redis:7-alpine
    container_name: spfn-redis-auth
    ports:
      - "6382:6379"
    command: redis-server --requirepass secret123
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "secret123", "ping"]
      interval: 2s
      timeout: 3s
      retries: 5

volumes:
  postgres_test_data:

networks:
  default:
    name: spfn-test-network